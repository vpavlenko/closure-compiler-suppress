var entries = [{"group":"accessControls","formatMessage":"Access to private variable {0} not allowed outside file {1}."},{"group":"accessControls","formatMessage":"Property {0} of type {1} has been deprecated."},{"group":"accessControls","formatMessage":"Access to private property {0} of {1} not allowed here."},{"group":"accessControls","formatMessage":"Overriding {0} property of {1} with {2} property."},{"group":"accessControls","formatMessage":"Declared access conflicts with access convention."},{"group":"accessControls","formatMessage":"Variable {0} has been deprecated."},{"group":"accessControls","formatMessage":"Access to protected property {0} of {1} not allowed here."},{"group":"accessControls","formatMessage":"{0} is not allowed to extend final class {1}."},{"group":"accessControls","formatMessage":"Access to package-private property {0} of {1} not allowed here."},{"group":"accessControls","formatMessage":"Variable {0} has been deprecated: {1}"},{"group":"accessControls","formatMessage":"Class {0} has been deprecated: {1}"},{"group":"accessControls","formatMessage":"Class {0} has been deprecated."},{"group":"accessControls","formatMessage":"Property {0} of type {1} has been deprecated: {2}"},{"group":"accessControls","formatMessage":"Overriding private property of {0}."},{"group":"ambiguousFunctionDecl","formatMessage":"Ambiguous use of a named function: {0}."},{"group":"ambiguousFunctionDecl","formatMessage":"functions can only be declared at top level or immediately within another function in ES5 strict mode"},{"group":"checkEventfulObjectDisposal","formatMessage":"eventful object created should be\n  * registered as disposable, or\n  * explicitly disposed of"},{"group":"checkEventfulObjectDisposal","formatMessage":"a purely local eventful object cannot be disposed of later"},{"group":"checkEventfulObjectDisposal","formatMessage":"private eventful object overwritten in subclass cannot be properly disposed of"},{"group":"checkEventfulObjectDisposal","formatMessage":"an unlisten call with an anonymous or bound function does not result in the event being unlisted to"},{"group":"checkRegExp","formatMessage":"References to the global RegExp object prevents optimization of regular expressions."},{"group":"checkRegExp","formatMessage":"Malformed Regular Expression: {0}"},{"group":"checkStructDictInheritance","formatMessage":"{1} cannot extend this type; {0}s can only extend {0}s"},{"group":"checkTypes","formatMessage":"{1} cannot extend this type; {0}s can only extend {0}s"},{"group":"checkTypes","formatMessage":"variable {0} redefined with type {1}, original definition at {2}:{3} with type {4}"},{"group":"checkTypes","formatMessage":"mismatch of the {0} property type and the type of the property it overrides from interface {1}\noriginal: {2}\noverride: {3}"},{"group":"checkTypes","formatMessage":"property {0} already defined on interface {1}; use @override to override it"},{"group":"checkTypes","formatMessage":"property {0} is already defined by the {1} extended interface"},{"group":"checkTypes","formatMessage":"Function {0}: called with {1} argument(s). Function requires at least {2} argument(s){3}."},{"group":"checkTypes","formatMessage":"Missing @extends tag on type {0}"},{"group":"checkTypes","formatMessage":"Property {0} never defined on {1}"},{"group":"checkTypes","formatMessage":"unknown type: {0}"},{"group":"checkTypes","formatMessage":"condition always evaluates to {2}\nleft : {0}\nright: {1}"},{"group":"checkTypes","formatMessage":"Property {0} never defined on {1}"},{"group":"checkTypes","formatMessage":"enum element {0} already defined"},{"group":"checkTypes","formatMessage":"{0} cannot implement this type; an interface can only extend, but not implement interfaces"},{"group":"checkTypes","formatMessage":"property {0} on interface {1} is not implemented by type {2}"},{"group":"checkTypes","formatMessage":"Variable {0} not declared before @lends annotation."},{"group":"checkTypes","formatMessage":"@this type of a function must be an object\nActual type: {0}"},{"group":"checkTypes","formatMessage":"invalid cast - must be a subtype or supertype\nfrom: {0}\nto  : {1}"},{"group":"checkTypes","formatMessage":"mismatch of the {0} property type and the type of the property it overrides from superclass {1}\noriginal: {2}\noverride: {3}"},{"group":"checkTypes","formatMessage":"Interface {0} must be initialized at declaration"},{"group":"checkTypes","formatMessage":"Cannot use the IN operator with structs"},{"group":"checkTypes","formatMessage":"enum key {0} must be a syntactic constant"},{"group":"checkTypes","formatMessage":"Cannot add a property to a struct instance after it is constructed."},{"group":"checkTypes","formatMessage":"variable {0} redefined, original definition at {1}:{2}"},{"group":"checkTypes","formatMessage":"operator {0} cannot be applied to {1}"},{"group":"checkTypes","formatMessage":"interface members can only be empty property declarations, empty functions{0}"},{"group":"checkTypes","formatMessage":"Illegal annotation on {0}. @implicitCast may only be used in externs."},{"group":"checkTypes","formatMessage":"\"{0}\" must be called with a \"this\" type"},{"group":"checkTypes","formatMessage":"mismatch of the {0} property type and the type of the property it overrides from superclass {1}\noriginal: {2}\noverride: {3}"},{"group":"checkTypes","formatMessage":"interface member functions must have an empty body"},{"group":"checkTypes","formatMessage":"property {0} already defined on superclass {1}; use @override to override it"},{"group":"checkTypes","formatMessage":"{0}"},{"group":"checkTypes","formatMessage":"could not resolve the name {0} to a type"},{"group":"checkTypes","formatMessage":"{0}"},{"group":"checkTypes","formatMessage":"declaration of multiple variables with shared type information"},{"group":"checkTypes","formatMessage":"Constructor {0} must be initialized at declaration"},{"group":"checkTypes","formatMessage":"element {0} does not exist on this enum"},{"group":"checkTypes","formatMessage":"Interface {0} has a property {1} with incompatible types in its super interfaces {2} and {3}"},{"group":"checkTypes","formatMessage":"function {0} masks variable (IE bug)"},{"group":"checkTypes","formatMessage":"can only implement interfaces"},{"group":"checkTypes","formatMessage":"Illegal key, the object literal is a {0}"},{"group":"checkTypes","formatMessage":"{0} expressions are not callable"},{"group":"checkTypes","formatMessage":"Cannot do {0} access on a {1}"},{"group":"checkTypes","formatMessage":"cannot instantiate non-constructor"},{"group":"checkTypes","formatMessage":"May only lend properties to object types. {0} has type {1}."},{"group":"checkTypes","formatMessage":"{1} cannot extend this type; {0}s can only extend {0}s"},{"group":"checkTypes","formatMessage":"Constructor {0} should be called with the \"new\" keyword"},{"group":"checkTypes","formatMessage":"property {0} not defined on any superclass of {1}"},{"group":"checkVars","formatMessage":"variable {0} is undeclared"},{"group":"checkVars","formatMessage":"Variable {0} first declared in {1}"},{"group":"checkVars","formatMessage":"Variable referenced before declaration: {0}"},{"group":"checkVars","formatMessage":"Redeclared variable: {0}"},{"group":"const","formatMessage":"constant property {0} cannot be deleted"},{"group":"const","formatMessage":"constant property {0} assigned a value more than once"},{"group":"const","formatMessage":"constant {0} assigned a value more than once.\nOriginal definition at {1}"},{"group":"constantProperty","formatMessage":"constant property {0} cannot be deleted"},{"group":"constantProperty","formatMessage":"constant property {0} assigned a value more than once"},{"group":"deprecated","formatMessage":"Variable {0} has been deprecated."},{"group":"deprecated","formatMessage":"Variable {0} has been deprecated: {1}"},{"group":"deprecated","formatMessage":"Property {0} of type {1} has been deprecated."},{"group":"deprecated","formatMessage":"Property {0} of type {1} has been deprecated: {2}"},{"group":"deprecated","formatMessage":"Class {0} has been deprecated."},{"group":"deprecated","formatMessage":"Class {0} has been deprecated: {1}"},{"group":"duplicateMessage","formatMessage":"duplicate message variable name found for {0}, initial definition {1}:{2}"},{"group":"es3","formatMessage":"Keywords and reserved words are not allowed as unquoted property names in older versions of JavaScript. If you are targeting newer versions of JavaScript, set the appropriate language_in option."},{"group":"es3","formatMessage":"Parse error. IE8 (and below) will parse trailing commas in array and object literals incorrectly. If you are targeting newer versions of JS, set the appropriate language_in option."},{"group":"es5Strict","formatMessage":"\"arguments\" cannot be redeclared in ES5 strict mode"},{"group":"es5Strict","formatMessage":"\"arguments.callee\" cannot be used in ES5 strict mode"},{"group":"es5Strict","formatMessage":"the \"arguments\" object cannot be reassigned in ES5 strict mode"},{"group":"es5Strict","formatMessage":"This style of octal literal is not supported in strict mode."},{"group":"es5Strict","formatMessage":"variables, functions, and arguments cannot be deleted in ES5 strict mode"},{"group":"es5Strict","formatMessage":"\"eval\" cannot be redeclared in ES5 strict mode"},{"group":"es5Strict","formatMessage":"\"arguments.caller\" cannot be used in ES5 strict mode"},{"group":"es5Strict","formatMessage":"unknown variable {0}"},{"group":"es5Strict","formatMessage":"A function\u0027s \"caller\" property cannot be used in ES5 strict mode"},{"group":"es5Strict","formatMessage":"functions can only be declared at top level or immediately within another function in ES5 strict mode"},{"group":"es5Strict","formatMessage":"the \"eval\" object cannot be reassigned in ES5 strict mode"},{"group":"es5Strict","formatMessage":"A function\u0027s \"arguments\" property cannot be used in ES5 strict mode"},{"group":"es5Strict","formatMessage":"The with statement cannot be used in ES5 strict mode."},{"group":"es5Strict","formatMessage":"object literals cannot contain duplicate keys in ES5 strict mode"},{"group":"externsValidation","formatMessage":"accessing name {0} in externs has no effect. Perhaps you forgot to add a var keyword?"},{"group":"externsValidation","formatMessage":"name {0} is not defined in the externs."},{"group":"fileoverviewTags","formatMessage":"{0}"},{"group":"globalThis","formatMessage":"dangerous use of the global this object"},{"group":"inferredConstCheck","formatMessage":"Unable to infer type of constant."},{"group":"internetExplorerChecks","formatMessage":"Parse error. IE8 (and below) will parse trailing commas in array and object literals incorrectly. If you are targeting newer versions of JS, set the appropriate language_in option."},{"group":"invalidCasts","formatMessage":"invalid cast - must be a subtype or supertype\nfrom: {0}\nto  : {1}"},{"group":"misplacedTypeAnnotation","formatMessage":"Type annotations are not allowed here. Are you missing parentheses?"},{"group":"missingGetCssName","formatMessage":"missing goog.getCssName around literal \u0027{0}\u0027"},{"group":"missingProperties","formatMessage":"Property {0} never defined on {1}"},{"group":"missingProperties","formatMessage":"Property {0} never defined on {1}"},{"group":"missingProvide","formatMessage":"missing goog.provide(\u0027{0}\u0027)"},{"group":"missingRequire","formatMessage":"\u0027{0}\u0027 used but not goog.require\u0027d"},{"group":"missingReturn","formatMessage":"Missing return statement. Function expected to return {0}."},{"group":"newCheckTypes","formatMessage":"{1} cannot extend this type; {0}s can only extend {0}s"},{"group":"newCheckTypes","formatMessage":"dangerous use of the global this object"},{"group":"newCheckTypes","formatMessage":"Expected numeric array index but found {0}."},{"group":"newCheckTypes","formatMessage":"Returned type does not match declared return type.\n declared : {0}\nfound    : {1}\n"},{"group":"newCheckTypes","formatMessage":"Could not instantiate type {0} with {1}."},{"group":"newCheckTypes","formatMessage":"Illegal instantiation for type variable {0}.\nYou can only specify one type. Found {1}."},{"group":"newCheckTypes","formatMessage":"For/in expects an object, found type {0}."},{"group":"newCheckTypes","formatMessage":"Must specify a name when defining a class or interface."},{"group":"newCheckTypes","formatMessage":"{0} cannot implement this type; an interface can only extend, but not implement interfaces"},{"group":"newCheckTypes","formatMessage":"property {0} on interface {1} is not implemented by type {2}"},{"group":"newCheckTypes","formatMessage":"The right side in the assignment is not a subtype of the left side.\nleft side  : {0}\nright side : {1}\n"},{"group":"newCheckTypes","formatMessage":"Type annotation references non-existent type {0}."},{"group":"newCheckTypes","formatMessage":"Parse error. {0}"},{"group":"newCheckTypes","formatMessage":"invalid cast - must be a subtype or supertype\nfrom: {0}\nto  : {1}"},{"group":"newCheckTypes","formatMessage":"Cannot use the IN operator with structs"},{"group":"newCheckTypes","formatMessage":"enum key {0} must be a syntactic constant"},{"group":"newCheckTypes","formatMessage":"You thought we werent going to notice? Guess again.\nVariable {0} typed inconsistently across scopes.\n In outer scope : {1}\nIn inner scope : {2}\n"},{"group":"newCheckTypes","formatMessage":"The #{0} formal parameter of this function has an invalid type, which prevents the function from being called.\nPlease change the type."},{"group":"newCheckTypes","formatMessage":"A typedef variable represents a type name; it cannot be assigned a value."},{"group":"newCheckTypes","formatMessage":"All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation."},{"group":"newCheckTypes","formatMessage":"Property {0} appears twice in the enum declaration."},{"group":"newCheckTypes","formatMessage":"Invalid type for parameter {0} of function {1}.\n expected : {2}\nfound    : {3}\n"},{"group":"newCheckTypes","formatMessage":"declaration of multiple variables with shared type information"},{"group":"newCheckTypes","formatMessage":"Constants must be initialized when they are defined."},{"group":"newCheckTypes","formatMessage":"An enum must be initialized to a non-empty object literal."},{"group":"newCheckTypes","formatMessage":"Interface {0} has a property {1} with incompatible types in its super interfaces {2} and {3}"},{"group":"newCheckTypes","formatMessage":"Illegal key, the object literal is a {0}"},{"group":"newCheckTypes","formatMessage":"Final method {0} cannot be overriden."},{"group":"newCheckTypes","formatMessage":"Missing return statement. Function expected to return {0}."},{"group":"newCheckTypes","formatMessage":"This property cannot be @const. The @const annotation is only allowed for properties of namespaces, prototype properties, static properties of constructors, and properties of the form this.prop declared inside constructors."},{"group":"newCheckTypes","formatMessage":"{0} expressions are not callable"},{"group":"newCheckTypes","formatMessage":"Cannot access property {0} of non-object type {1}."},{"group":"newCheckTypes","formatMessage":"Property {0} may not be present on {1}."},{"group":"newCheckTypes","formatMessage":"Expected a constructor but found type {0}."},{"group":"newCheckTypes","formatMessage":"{0} used without @constructor."},{"group":"newCheckTypes","formatMessage":"{1} cannot extend this type; {0}s can only extend {0}s"},{"group":"newCheckTypes","formatMessage":"Invalid redeclaration of property {0}.\ninherited type  : {1}\noverriding type : {2}\n"},{"group":"newCheckTypes","formatMessage":"property {0} not defined on any superclass of {1}"},{"group":"newCheckTypes","formatMessage":"Interface definitions should have an empty body."},{"group":"newCheckTypes","formatMessage":"Object-literal property declared as {0} but has type {1}."},{"group":"newCheckTypes","formatMessage":"Function {0}: called with {1} argument(s). Function requires at least {2} argument(s){3}."},{"group":"newCheckTypes","formatMessage":"parameter {0} does not appear in {1}\u0027s parameter list"},{"group":"newCheckTypes","formatMessage":"For/in creates string keys, but variable has declared type {1}."},{"group":"newCheckTypes","formatMessage":"Class {0} is a dict. Dicts cant implement interfaces."},{"group":"newCheckTypes","formatMessage":"unknown type: {0}"},{"group":"newCheckTypes","formatMessage":"Property {0} never defined on {1}"},{"group":"newCheckTypes","formatMessage":"Found two declarations for property {0} of type {1}.\n"},{"group":"newCheckTypes","formatMessage":"May only lend properties to namespaces, constructors and their prototypes. Found {0}."},{"group":"newCheckTypes","formatMessage":"Invalid type(s) for operator {0}.\nexpected : {1}\nfound    : {2}\n"},{"group":"newCheckTypes","formatMessage":"Cannot add a property to a struct instance after it is constructed."},{"group":"newCheckTypes","formatMessage":"{0} extends non-object type {1}.\n"},{"group":"newCheckTypes","formatMessage":"@implements used without @constructor or @interface for {0}"},{"group":"newCheckTypes","formatMessage":"Found two JsDoc comments for variable: {0}.\n"},{"group":"newCheckTypes","formatMessage":"Function called in context that expects incompatible type.\n expected : {0}\nfound    : {1}\n"},{"group":"newCheckTypes","formatMessage":"Modifying the prototype is only allowed if the constructor is in the same scope\n"},{"group":"newCheckTypes","formatMessage":"Undeclared reference to {0}."},{"group":"newCheckTypes","formatMessage":"Cycle detected in inheritance chain of type {0}"},{"group":"newCheckTypes","formatMessage":"Cannot change the value of a constant."},{"group":"newCheckTypes","formatMessage":"Cannot do {0} access on a {1}"},{"group":"newCheckTypes","formatMessage":"@extends used without @constructor or @interface for {0}.\n"},{"group":"newCheckTypes","formatMessage":"Constructor {0} should be called with the \"new\" keyword"},{"group":"nonStandardJsDocs","formatMessage":"Parse error. {0}"},{"group":"nonStandardJsDocs","formatMessage":"Parse error. {0}"},{"group":"reportUnknownTypes","formatMessage":"could not determine the type of this expression"},{"group":"suspiciousCode","formatMessage":"If this if/for/while really shouldnt have a body, use {}"},{"group":"suspiciousCode","formatMessage":"Comparison again NaN is always false. Did you mean isNaN()?"},{"group":"suspiciousCode","formatMessage":"Use of the \"in\" keyword on non-object types throws an exception."},{"group":"suspiciousCode","formatMessage":"\"instanceof\" with left non-object operand is always false."},{"group":"strictModuleDepCheck","formatMessage":"cannot reference {2} because of a missing module dependency\ndefined in module {1}, referenced from module {0}"},{"group":"strictModuleDepCheck","formatMessage":"cannot reference {2} because of a missing module dependency\ndefined in module {1}, referenced from module {0}"},{"group":"typeInvalidation","formatMessage":"Property disambiguator skipping all instances of property {0} because of type {1} node {2}. {3}"},{"group":"typeInvalidation","formatMessage":"Property disambiguator skipping instances of property {0} on type {1}. {2}"},{"group":"undefinedNames","formatMessage":"{0} is never defined"},{"group":"undefinedVars","formatMessage":"variable {0} is undeclared"},{"group":"unknownDefines","formatMessage":"unknown @define variable {0}"},{"group":"uselessCode","formatMessage":"Suspicious code. {0}"},{"group":"uselessCode","formatMessage":"unreachable code"},{"group":"useOfGoogBase","formatMessage":"goog.base is not compatible with ES5 strict mode."},{"group":"visibility","formatMessage":"Access to private variable {0} not allowed outside file {1}."},{"group":"visibility","formatMessage":"Access to private property {0} of {1} not allowed here."},{"group":"visibility","formatMessage":"Access to package-private property {0} of {1} not allowed here."},{"group":"visibility","formatMessage":"Access to protected property {0} of {1} not allowed here."},{"group":"visibility","formatMessage":"{0} is not allowed to extend final class {1}."},{"group":"visibility","formatMessage":"Overriding private property of {0}."},{"group":"visibility","formatMessage":"Overriding {0} property of {1} with {2} property."},{"group":"visibility","formatMessage":"Declared access conflicts with access convention."}];

function formatEntry(entry) {
    var entryTag = $('<tr class="entry">');
    entryTag.append($('<td class="group">').text('@suppress {' + entry.group + '}'));
    entryTag.append($('<td class="formatMessage">').text(entry.formatMessage));
    return entryTag;
}

$(function() {
  for (var i in entries) {
    $('#list').append(formatEntry(entries[i]));
  }
});